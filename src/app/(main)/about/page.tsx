"use client";

import { Card, CardContent } from "@/components/ui/card";
import { useState, useEffect } from "react";
import { X, MapPin, Navigation, ExternalLink, Phone, Clock, Globe } from "lucide-react";
import { cn } from "@/lib/utils";

const About = () => {
  const [visibleCards, setVisibleCards] = useState<number[]>([]);
  const [hoveredCard, setHoveredCard] = useState<number | null>(null);
  const [mapCampus, setMapCampus] = useState<any | null>(null);

  const campuses = [
    {
      title: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i H√† N·ªôi",
      description: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i H√† N·ªôi t·ªça l·∫°c t·∫°i Th·ªß ƒë√¥ ngh√¨n nƒÉm vƒÉn hi·∫øn. V·ªõi khu√¥n vi√™n 30ha, s·ª©c ch·ª©a l√™n ƒë·∫øn 10.000 sinh vi√™n v√† h∆°n 5.000 ch·ªó ·ªü n·ªôi tr√∫, campus n√†y ƒë∆∞·ª£c v√≠ nh∆∞ m·ªôt khu ƒë√¥ th·ªã to√†n nƒÉng thu nh·ªè.",
      fullDescription: "Thi·∫øt k·∫ø kh√¥ng gian m·ªü, xen k·∫Ω v·ªõi thi√™n nhi√™n xanh m√°t mang l·∫°i c·∫£m gi√°c tho√°ng ƒë√£ng, t·∫°o n√™n s·ª± c√¢n b·∫±ng gi·ªØa t·ª± nhi√™n v√† con ng∆∞·ªùi, campus n√†y h·ªôi ƒë·ªß y·∫øu t·ªë tr·ªü th√†nh n∆°i g·∫ßn b·ªù, tr∆∞·ªùng th√†nh v√† ph√°t tri·ªÉn c√° nh√¢n to√†n di·ªán c·ªßa sinh vi√™n trong giai ƒëo·∫°n thanh xu√¢n r·ª±c r·ª°.",
      image: "/images/campus-hanoi.jpg",
      mapButton: "Xem Map",
      color: "from-blue-500 to-cyan-500",
      stats: [
        { label: "Di·ªán t√≠ch", value: "30ha", icon: "üè¢" },
        { label: "Sinh vi√™n", value: "10,000", icon: "üë•" },
        { label: "Ch·ªó ·ªü", value: "5,000", icon: "üè†" }
      ],
      address: "Khu c√¥ng ngh·ªá cao H√≤a L·∫°c, Km29 ƒê·∫°i l·ªô ThƒÉng Long, x√£ Th·∫°ch H√≤a, huy·ªán Th·∫°ch Th·∫•t, H√† N·ªôi",
      locationDescription: "Thi·∫øt k·∫ø h√¨nh r·ªìng n·ªïi b·∫≠t, nhi·ªÅu kh√¥ng gian xanh v√† ƒë∆∞·ª£c trao gi·∫£i ki·∫øn tr√∫c qu·ªëc t·∫ø. ƒê√¢y l√† campus ƒë·∫ßu ti√™n v√† l·ªõn nh·∫•t c·ªßa FPT.",
      mapEmbed: "https://www.google.com/maps?q=FPT+University+H%C3%B√≤a+L%E1%BA%A1c&output=embed",
      city: "H√† N·ªôi",
      phone: "024 7300 1866",
      website: "hanoi.fpt.edu.vn",
      established: "2006"
    },
    {
      title: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i ƒê√† N·∫µng",
      description: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i ƒê√† N·∫µng t·ªça l·∫°c trong l√≤ng Khu ƒë√¥ th·ªã FPT t·∫°i th√†nh ph·ªë ƒê√† N·∫µng ‚Äì n∆°i ƒë∆∞·ª£c m·ªánh danh 'th√†nh ph·ªë ƒë√°ng s·ªëng nh·∫•t Vi·ªát Nam'.",
      fullDescription: "Khu√¥n vi√™n Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i ƒê√† N·∫µng ƒë∆∞·ª£c x√¢y d·ª±ng theo m√¥ h√¨nh campus to√†n nƒÉng v·ªõi kh√¥ng gian m·ªü, thi√™n nhi√™n xanh m√°t, trong l√†nh mang ƒë·∫øn cho sinh vi√™n m√¥i tr∆∞·ªùng h·ªçc t·∫≠p, tr·∫£i nghi·ªám h·ªôi ho√° l√Ω t∆∞·ªüng.",
      image: "/images/campus-hanoi.jpg",
      mapButton: "Xem Map",
      color: "from-orange-500 to-red-500",
      stats: [
        { label: "Kh√¥ng gian", value: "M·ªü", icon: "üå≥" },
        { label: "M√¥i tr∆∞·ªùng", value: "Xanh", icon: "üçÉ" },
        { label: "Ti·ªán √≠ch", value: "ƒê·∫ßy ƒë·ªß", icon: "‚≠ê" }
      ],
      address: "Khu ƒë√¥ th·ªã c√¥ng ngh·ªá FPT City, ph∆∞·ªùng H√≤a H·∫£i, qu·∫≠n Ng≈© H√†nh S∆°n, ƒê√† N·∫µng",
      locationDescription: "X√¢y tr√™n di·ªán t√≠ch g·∫ßn 5.1 ha, c√¥ng tr√¨nh l·∫•y c·∫£m h·ª©ng t·ª´ \"s√°ch x·∫øp ch·ªìng\", c√≥ s√¢n b√≥ng v√† th∆∞ vi·ªán.",
      mapEmbed: "https://www.google.com/maps?q=FPT+University+Da+Nang&output=embed",
      city: "ƒê√† N·∫µng",
      phone: "0236 6506 088",
      website: "danang.fpt.edu.vn",
      established: "2009"
    },
    {
      title: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i TP. HCM",
      description: "Campus n√†y t·ªça l·∫°c t·∫°i th√†nh ph·ªë mang t√™n B√°c ‚Äì th√†nh ph·ªë tr·∫ª, s√¥i ƒë·ªông v√† hi·ªán ƒë·∫°i b·∫≠c nh·∫•t Vi·ªát Nam, b√™n trong Khu c√¥ng ngh·ªá cao.",
      fullDescription: "N∆°i h·ªôi t·ª• c√°c t·∫≠p ƒëo√†n ƒëa qu·ªëc gia, c√°c trung t√¢m nghi√™n c·ª©u khoa h·ªçc c√¥ng ngh·ªá hi·ªán ƒë·∫°i, mang ƒë·∫øn cho sinh vi√™n c∆° h·ªôi ti·∫øp c·∫≠n v·ªõi m√¥i tr∆∞·ªùng c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t.",
      image: "/images/campus-hanoi.jpg",
      mapButton: "Xem Map",
      color: "from-purple-500 to-pink-500",
      stats: [
        { label: "V·ªã tr√≠", value: "KCN Cao", icon: "üè≠" },
        { label: "C√¥ng ngh·ªá", value: "Hi·ªán ƒë·∫°i", icon: "üíª" },
        { label: "C∆° h·ªôi", value: "Cao", icon: "üöÄ" }
      ],
      address: "L√¥ E2a‚Äë7, ƒë∆∞·ªùng D1, Khu C√¥ng ngh·ªá cao (Saigon Hi‚ÄëTech Park), ph∆∞·ªùng Long Th·∫°nh M·ªπ, TP. Th·ªß ƒê·ª©c",
      locationDescription: "Campus r·ªông ~22.500 m¬≤, ki·∫øn tr√∫c xanh v√† ƒë·ªôc ƒë√°o theo phong c√°ch V√µ Tr·ªçng Nghƒ©a, ƒë∆∞·ª£c v√≠ nh∆∞ resort v·ªõi s√¢n trong, th∆∞ vi·ªán, ph√≤ng lab‚Ä¶",
      mapEmbed: "https://www.google.com/maps?q=FPT+University+HCM&output=embed",
      city: "TP. HCM",
      phone: "028 7300 1866",
      website: "hcm.fpt.edu.vn",
      established: "2010"
    },
    {
      title: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i C·∫ßn Th∆°",
      description: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i C·∫ßn Th∆° n·∫±m t·∫°i trung t√¢m ƒë·ªìng b·∫±ng s√¥ng C·ª≠u Long, l√† n∆°i h·ªôi t·ª• c·ªßa sinh vi√™n c√°c t·ªânh mi·ªÅn T√¢y.",
      fullDescription: "V·ªõi c∆° s·ªü v·∫≠t ch·∫•t hi·ªán ƒë·∫°i, kh√¥ng gian xanh m√°t, campus C·∫ßn Th∆° mang ƒë·∫øn m√¥i tr∆∞·ªùng h·ªçc t·∫≠p l√Ω t∆∞·ªüng, g·∫ßn g≈©i thi√™n nhi√™n v√† thu·∫≠n ti·ªán di chuy·ªÉn cho sinh vi√™n khu v·ª±c ph√≠a Nam.",
      image: "/images/campus-hanoi.jpg",
      mapButton: "Xem Map",
      color: "from-green-600 to-green-400",
      stats: [
        { label: "Di·ªán t√≠ch", value: "20ha", icon: "üè¢" },
        { label: "Sinh vi√™n", value: "5,000", icon: "üë•" },
        { label: "Khu v·ª±c", value: "Mi·ªÅn T√¢y", icon: "üåæ" }
      ],
      address: "S·ªë 600, ƒë∆∞·ªùng Nguy·ªÖn VƒÉn C·ª´ m·ªü r·ªông, ph∆∞·ªùng An B√¨nh, qu·∫≠n Ninh Ki·ªÅu, C·∫ßn Th∆°",
      locationDescription: "Thi·∫øt k·∫ø do c√¥ng ty ki·∫øn tr√∫c Ph√°p ƒë·∫£m nhi·ªám, ri√™ng bi·ªát, t√≠ch h·ª£p th∆∞ vi·ªán, ph√≤ng m√°y v√† kh√°ch s·∫°n th·ª±c t·∫≠p qu·∫£n tr·ªã cho ng√†nh du l·ªãch.",
      mapEmbed: "https://www.google.com/maps?q=FPT+University+Can+Tho&output=embed",
      city: "C·∫ßn Th∆°",
      phone: "0292 7300 866",
      website: "cantho.fpt.edu.vn",
      established: "2009"
    },
    {
      title: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i Quy Nh∆°n",
      description: "Campus Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT t·∫°i Quy Nh∆°n t·ªça l·∫°c t·∫°i th√†nh ph·ªë bi·ªÉn mi·ªÅn Trung, n·ªïi b·∫≠t v·ªõi kh√¥ng gian s√°ng t·∫°o v√† c√¥ng ngh·ªá.",
      fullDescription: "ƒê∆∞·ª£c ƒë·∫ßu t∆∞ ph√°t tri·ªÉn m·∫°nh v·ªÅ AI v√† c√¥ng ngh·ªá m·ªõi, campus Quy Nh∆°n l√† ƒëi·ªÉm ƒë·∫øn l√Ω t∆∞·ªüng cho sinh vi√™n y√™u th√≠ch nghi√™n c·ª©u, s√°ng t·∫°o v√† tr·∫£i nghi·ªám m√¥i tr∆∞·ªùng h·ªçc t·∫≠p qu·ªëc t·∫ø.",
      image: "/images/campus-hanoi.jpg",
      mapButton: "Xem Map",
      color: "from-blue-700 to-indigo-400",
      stats: [
        { label: "Chuy√™n ng√†nh", value: "AI, Data", icon: "ü§ñ" },
        { label: "Sinh vi√™n", value: "2,000", icon: "üë•" },
        { label: "Bi·ªÉn", value: "G·∫ßn bi·ªÉn", icon: "üåä" }
      ],
      address: "Khu ƒë√¥ th·ªã m·ªõi An Ph√∫ Th·ªãnh, Nh∆°n B√¨nh & Nh∆°n ƒê·ªôn ‚Äë Quy Nh∆°n, B√¨nh ƒê·ªãnh",
      locationDescription: "Mong x√¢y d·ª±ng trung t√¢m AI l·ªõn nh·∫•t Vi·ªát Nam, n·∫±m ven ƒë·∫ßm Thi Nai ‚Äì h∆∞·ªõng ra bi·ªÉn, bao g·ªìm c·∫£ khu ·ªü cho gi·∫£ng vi√™n.",
      mapEmbed: "https://www.google.com/maps?q=FPT+University+Quy+Nhon&output=embed",
      city: "Quy Nh∆°n",
      phone: "0256 7300 299",
      website: "quyinhon.fpt.edu.vn",
      established: "2017"
    },
  ];

  useEffect(() => {
    const timer = setTimeout(() => {
      campuses.forEach((_, index) => {
        setTimeout(() => {
          setVisibleCards(prev => [...prev, index]);
        }, index * 200);
      });
    }, 300);

    return () => clearTimeout(timer);
  }, []);

  const handleMapClick = (campus: any) => {
    setMapCampus(campus);
  };

  const handleCloseMap = () => setMapCampus(null);

  const handleDirections = (address: string) => {
    const encodedAddress = encodeURIComponent(address);
    window.open(`https://www.google.com/maps/dir/?api=1&destination=${encodedAddress}`, '_blank');
  };

  const handleCallPhone = (phone: string) => {
    window.open(`tel:${phone}`, '_self');
  };

  const handleVisitWebsite = (website: string) => {
    window.open(`https://${website}`, '_blank');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100 p-6">
      {/* Hero Section */}
      <div className="relative mb-12 text-center">
        <div className="absolute inset-0 bg-gradient-to-r from-orange-500/10 to-red-500/10 rounded-3xl blur-3xl" />
        <div className="relative z-10 py-12">
          <h1 className="text-5xl font-bold bg-gradient-to-r from-orange-600 to-red-600 bg-clip-text text-transparent mb-6 animate-fadeIn">
            Kh√°m ph√° c√°c Campus FPT
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed animate-slideIn">
            H·ªá th·ªëng campus hi·ªán ƒë·∫°i tr·∫£i d√†i kh·∫Øp Vi·ªát Nam, mang ƒë·∫øn m√¥i tr∆∞·ªùng h·ªçc t·∫≠p t·ªët nh·∫•t cho sinh vi√™n
          </p>
          <div className="flex justify-center mt-8 space-x-8 animate-fadeIn">
            <div className="text-center">
              <div className="text-3xl font-bold text-orange-600">5</div>
              <div className="text-gray-600">Campus</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-orange-600">50,000+</div>
              <div className="text-gray-600">Sinh vi√™n</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-orange-600">15+</div>
              <div className="text-gray-600">NƒÉm kinh nghi·ªám</div>
            </div>
          </div>
        </div>
      </div>

      {/* Campus Cards */}
      <div className="space-y-12 max-w-7xl mx-auto">
        {campuses.map((campus, index) => (
          <Card 
            key={index} 
            className={cn(
              "group relative overflow-hidden bg-white/80 backdrop-blur-sm border-0 shadow-xl hover:shadow-2xl transition-all duration-700 transform hover:scale-[1.02]",
              visibleCards.includes(index) ? "opacity-100 translate-y-0" : "opacity-0 translate-y-8",
              "animate-slideIn"
            )}
            style={{ animationDelay: `${index * 200}ms` }}
            onMouseEnter={() => setHoveredCard(index)}
            onMouseLeave={() => setHoveredCard(null)}
          >
            {/* Background Gradient Overlay */}
            <div className={`absolute inset-0 bg-gradient-to-r ${campus.color} opacity-0 
              group-hover:opacity-5 transition-opacity duration-500`} />
            
            <CardContent className="p-0 relative">
              <div className={`flex ${index % 2 === 0 ? 'lg:flex-row' : 'lg:flex-row-reverse'} 
                flex-col gap-0 min-h-[500px]`}>
                
                {/* Content Section */}
                <div className="flex-1 p-8 lg:p-12 flex flex-col justify-center relative">
                  {/* City Badge */}
                  <div className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-semibold mb-6
                    bg-gradient-to-r ${campus.color} text-white shadow-lg transform transition-transform duration-300
                    ${hoveredCard === index ? 'scale-110' : ''}`}>
                    <span className="mr-2">üìç</span>
                    {campus.city}
                  </div>

                  <h2 className="text-3xl lg:text-4xl font-bold text-gray-900 mb-6 leading-tight">
                    {campus.title}
                  </h2>
                  
                  <p className="text-gray-700 text-lg leading-relaxed mb-4">
                    {campus.description}
                  </p>
                  
                  <p className="text-gray-600 leading-relaxed mb-8">
                    {campus.fullDescription}
                  </p>

                  {/* Stats */}
                  <div className="grid grid-cols-3 gap-4 mb-8">
                    {campus.stats.map((stat, statIndex) => (
                      <div key={statIndex} className="text-center p-4 bg-gray-50/80 rounded-xl hover:bg-gray-100/80 transition-colors duration-300">
                        <div className="text-2xl mb-2">{stat.icon}</div>
                        <div className="font-bold text-gray-900">{stat.value}</div>
                        <div className="text-sm text-gray-600">{stat.label}</div>
                      </div>
                    ))}
                  </div>

                  {/* Action Buttons */}
                  <div className="flex gap-4">
                    <button 
                      onClick={() => handleMapClick(campus)}
                      className={`flex-1 lg:flex-none px-8 py-4 bg-gradient-to-r ${campus.color} 
                        text-white rounded-xl font-semibold shadow-lg hover:shadow-xl 
                        transition-all duration-300 transform hover:scale-105 active:scale-95
                        flex items-center justify-center group`}
                    >
                      <span className="mr-2 group-hover:rotate-12 transition-transform duration-300">üó∫Ô∏è</span>
                      {campus.mapButton}
                    </button>
                    <button className="px-6 py-4 border-2 border-gray-300 text-gray-700 rounded-xl font-semibold
                      hover:border-gray-400 hover:bg-gray-50 transition-all duration-300 transform hover:scale-105">
                      T√¨m hi·ªÉu th√™m
                    </button>
                  </div>
                </div>

                {/* Image Section */}
                <div className="flex-1 relative group/image">
                  <div className="absolute inset-0 bg-gradient-to-br from-black/20 to-transparent z-10 opacity-0 group-hover/image:opacity-100 transition-opacity duration-500" />
                  
                  <img 
                    src={campus.image} 
                    alt={campus.title}
                    className="w-full h-64 lg:h-full object-cover transition-transform duration-700 group-hover/image:scale-110"
                  />
                  
                  {/* Floating Info Card */}
                  <div className={`absolute top-6 right-6 bg-white/90 backdrop-blur-sm rounded-xl p-4 shadow-lg
                    transform transition-all duration-500 z-20
                    ${hoveredCard === index ? 'translate-y-0 opacity-100' : 'translate-y-4 opacity-0'}`}>
                    <div className="text-sm font-semibold text-gray-900">Campus {index + 1}</div>
                    <div className="text-xs text-gray-600">ƒê∆∞·ª£c th√†nh l·∫≠p 2009</div>
                  </div>

                  {/* Overlay Pattern */}
                  <div className="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent opacity-60" />
                  
                  {/* Corner Badge */}
                  <div className="absolute bottom-6 left-6 z-20">
                    <div className={`px-4 py-2 bg-gradient-to-r ${campus.color} text-white rounded-lg shadow-lg
                      transform transition-all duration-300 ${hoveredCard === index ? 'scale-110' : ''}`}>
                      <div className="text-sm font-bold">Ranking #1</div>
                      <div className="text-xs opacity-90">IT University</div>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Bottom CTA Section */}
      <div className="mt-20 text-center">
        <div className="bg-gradient-to-r from-orange-500 to-red-500 rounded-3xl p-12 text-white shadow-2xl">
          <h3 className="text-3xl font-bold mb-4">S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh kh√°m ph√° c·ªßa b·∫°n?</h3>
          <p className="text-xl opacity-90 mb-8">Kh√°m ph√° c∆° h·ªôi h·ªçc t·∫≠p t·∫°i c√°c campus FPT tr√™n to√†n qu·ªëc</p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button className="px-8 py-4 bg-white text-orange-600 rounded-xl font-bold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105">
              ƒêƒÉng k√Ω tham quan
            </button>
            <button className="px-8 py-4 border-2 border-white text-white rounded-xl font-bold hover:bg-white hover:text-orange-600 transition-all duration-300 transform hover:scale-105">
              T·∫£i brochure
            </button>
          </div>
        </div>
      </div>

      {/* Enhanced Modal Map */}
      {mapCampus && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm p-4">
          <div className="bg-white rounded-3xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden animate-fadeIn">
            {/* Header Section */}
            <div className={`relative px-8 py-6 bg-gradient-to-r ${mapCampus.color} text-white`}>
              <button 
                onClick={handleCloseMap} 
                className="absolute top-4 right-4 p-2 rounded-full bg-white/20 hover:bg-white/30 text-white transition-all duration-200 hover:scale-110"
              >
                <X size={20} />
              </button>
              
              <div className="flex items-start gap-4">
                <div className="p-3 bg-white/20 rounded-xl">
                  <MapPin size={24} />
                </div>
                <div>
                  <h2 className="text-2xl font-bold mb-2">{mapCampus.city}</h2>
                  <p className="text-white/90 font-medium">Campus FPT University</p>
                  <div className="flex items-center gap-4 mt-3 text-sm">
                    <div className="flex items-center gap-1">
                      <Clock size={16} />
                      <span>Th√†nh l·∫≠p {mapCampus.established}</span>
                    </div>
                    <div className="flex items-center gap-1">
                      <Globe size={16} />
                      <span>{mapCampus.website}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div className="flex flex-col lg:flex-row max-h-[calc(90vh-120px)]">
              {/* Info Panel */}
              <div className="lg:w-2/5 p-6 bg-gray-50 overflow-y-auto">
                <div className="space-y-6">
                  {/* Address */}
                  <div>
                    <h4 className="font-bold text-gray-900 mb-3 flex items-center gap-2">
                      <MapPin size={18} className="text-blue-600" />
                      ƒê·ªãa ch·ªâ
                    </h4>
                    <p className="text-gray-700 leading-relaxed">{mapCampus.address}</p>
                  </div>

                  {/* Description */}
                  <div>
                    <h4 className="font-bold text-gray-900 mb-3">M√¥ t·∫£</h4>
                    <p className="text-gray-700 leading-relaxed text-sm">{mapCampus.locationDescription}</p>
                  </div>

                  {/* Contact Info */}
                  <div className="space-y-3">
                    <h4 className="font-bold text-gray-900 flex items-center gap-2">
                      <Phone size={18} className="text-green-600" />
                      Th√¥ng tin li√™n h·ªá
                    </h4>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between p-3 bg-white rounded-lg">
                        <span className="text-gray-600">ƒêi·ªán tho·∫°i:</span>
                        <button 
                          onClick={() => handleCallPhone(mapCampus.phone)}
                          className="text-blue-600 font-semibold hover:text-blue-700 transition-colors"
                        >
                          {mapCampus.phone}
                        </button>
                      </div>
                      <div className="flex items-center justify-between p-3 bg-white rounded-lg">
                        <span className="text-gray-600">Website:</span>
                        <button 
                          onClick={() => handleVisitWebsite(mapCampus.website)}
                          className="text-blue-600 font-semibold hover:text-blue-700 transition-colors flex items-center gap-1"
                        >
                          {mapCampus.website}
                          <ExternalLink size={14} />
                        </button>
                      </div>
                    </div>
                  </div>

                  {/* Action Buttons */}
                  <div className="space-y-3 pt-4 border-t">
                    <button 
                      onClick={() => handleDirections(mapCampus.address)}
                      className={`w-full px-6 py-4 bg-gradient-to-r ${mapCampus.color} text-white rounded-xl font-semibold 
                        shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-[1.02] 
                        flex items-center justify-center gap-3`}
                    >
                      <Navigation size={20} />
                      Ch·ªâ ƒë∆∞·ªùng ƒë·∫øn ƒë√¢y
                    </button>
                    
                    <div className="grid grid-cols-2 gap-3">
                      <button className="px-4 py-3 border-2 border-gray-300 text-gray-700 rounded-xl font-semibold
                        hover:border-gray-400 hover:bg-gray-50 transition-all duration-300 flex items-center justify-center gap-2">
                        <Phone size={16} />
                        G·ªçi ngay
                      </button>
                      <button className="px-4 py-3 border-2 border-gray-300 text-gray-700 rounded-xl font-semibold
                        hover:border-gray-400 hover:bg-gray-50 transition-all duration-300 flex items-center justify-center gap-2">
                        <Globe size={16} />
                        Website
                      </button>
                    </div>
                  </div>
                </div>
              </div>

              {/* Map Section */}
              <div className="lg:w-3/5 relative">
                <div className="h-64 lg:h-full rounded-br-3xl overflow-hidden">
                  <iframe
                    src={mapCampus.mapEmbed}
                    width="100%"
                    height="100%"
                    style={{ border: 0, minHeight: '400px' }}
                    allowFullScreen={true}
                    loading="lazy"
                    referrerPolicy="no-referrer-when-downgrade"
                    title={`B·∫£n ƒë·ªì ${mapCampus.city}`}
                    className="w-full h-full"
                  />
                </div>
                
                {/* Map Overlay Info */}
                <div className="absolute top-4 left-4 bg-white/95 backdrop-blur-sm rounded-xl p-4 shadow-lg max-w-64">
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-lg bg-gradient-to-r ${mapCampus.color}`}>
                      <MapPin size={16} className="text-white" />
                    </div>
                    <div>
                      <div className="font-bold text-gray-900 text-sm">{mapCampus.city}</div>
                      <div className="text-xs text-gray-600">FPT University Campus</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default About;