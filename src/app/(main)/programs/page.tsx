"use client";

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useRouter } from "next/navigation";
import { useState } from "react";
import BookingModal from '@/components/ui/BookingModal';

const Programs = () => {
  const navigate = useRouter();
  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);
  const [showBookingModal, setShowBookingModal] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const [bookingData, setBookingData] = useState({
    fullName: '',
    email: '',
    phone: '',
    type: 'online',
    date: '',
    time: ''
  });
  const timeSlots = [
    '09:00 - 10:00',
    '10:00 - 11:00',
    '11:00 - 12:00',
    '14:00 - 15:00',
    '15:00 - 16:00',
    '16:00 - 17:00',
  ];

  const programCategories = [
    {
      title: "C√¥ng ngh·ªá th√¥ng tin",
      subtitle: "Kh√°m ph√° t∆∞∆°ng lai s·ªë",
      description: "Trang b·ªã ki·∫øn th·ª©c v√† k·ªπ nƒÉng c√¥ng ngh·ªá ti√™n ti·∫øn cho th·∫ø h·ªá 4.0",
      gradient: "from-blue-500 to-purple-600",
      programs: [
        { name: "An to√†n th√¥ng tin", icon: "üõ°Ô∏è", id: "an-toan-thong-tin", trend: "üî• Hot" },
        { name: "C√¥ng ngh·ªá √¥ t√¥ s·ªë", icon: "üöó", id: "cong-nghe-oto-so", trend: "üöÄ M·ªõi" },
        { name: "K·ªπ thu·∫≠t ph·∫ßn m·ªÅm", icon: "üíª", id: "ky-thuat-phan-mem", trend: "‚≠ê Ph·ªï bi·∫øn" },
        { name: "Chuy·ªÉn ƒë·ªïi s·ªë", icon: "üîÑ", id: "chuyen-doi-so", trend: "üìà TƒÉng tr∆∞·ªüng" },
        { name: "Thi·∫øt k·∫ø m·ªπ thu·∫≠t s·ªë", icon: "üé®", id: "thiet-ke-my-thuat-so", trend: "üéØ S√°ng t·∫°o" },
        { name: "Thi·∫øt k·∫ø vi m·∫°ch b√°n d·∫´n", icon: "üîß", id: "thiet-ke-vi-mach-ban-dan", trend: "üåü Ti·ªÅm nƒÉng" },
        { name: "Tr√≠ tu·ªá nh√¢n t·∫°o", icon: "ü§ñ", id: "tri-tue-nhan-tao", trend: "üî• Xu h∆∞·ªõng" },
      ]
    },
    {
      title: "Qu·∫£n tr·ªã kinh doanh",
      subtitle: "D·∫´n d·∫Øt th∆∞∆°ng m·∫°i to√†n c·∫ßu",
      description: "Ph√°t tri·ªÉn t∆∞ duy qu·∫£n tr·ªã v√† k·ªπ nƒÉng kinh doanh hi·ªán ƒë·∫°i",
      gradient: "from-green-500 to-teal-600",
      programs: [
        { name: "C√¥ng ngh·ªá t√†i ch√≠nh (Fintech)", icon: "üí≥", id: "cong-nghe-tai-chinh-fintech", trend: "üöÄ B√πng n·ªï" },
        { name: "Digital Marketing", icon: "üìà", id: "digital-marketing", trend: "üî• Hot" },
        { name: "Kinh doanh qu·ªëc t·∫ø", icon: "üåç", id: "kinh-doanh-quoc-te", trend: "üåê To√†n c·∫ßu" },
        { name: "Logistics & qu·∫£n l√Ω chu·ªói cung ·ª©ng to√†n c·∫ßu", icon: "üì¶", id: "logistics-quan-ly-chuoi-cung-ung-toan-cau", trend: "üìä C·∫ßn thi·∫øt" },
        { name: "Qu·∫£n tr·ªã kh√°ch s·∫°n", icon: "üè®", id: "quan-ly-khach-san", trend: "üèñÔ∏è Du l·ªãch" },
        { name: "Qu·∫£n tr·ªã d·ªãch v·ª• du l·ªãch & l·ªØ h√†nh", icon: "‚úàÔ∏è", id: "quan-ly-dich-vu-du-lich-lu-hanh", trend: "üåè Ph√°t tri·ªÉn" },
        { name: "T√†i ch√≠nh doanh nghi·ªáp", icon: "üí∞", id: "tai-chinh-doanh-nghiep", trend: "üìà ·ªîn ƒë·ªãnh" },
        { name: "Ng√¢n h√†ng s·ªë - T√†i ch√≠nh", icon: "üè¶", id: "ngan-hang-so-tai-chinh-digital-banking-and-finance", trend: "üíé Ti·ªÅm nƒÉng" },
        { name: "T√†i ch√≠nh ƒë·∫ßu t∆∞", icon: "üìä", id: "tai-chinh-dau-tu", trend: "üíπ Sinh l·ªùi" },
      ]
    },
    {
      title: "C√¥ng ngh·ªá truy·ªÅn th√¥ng",
      subtitle: "K·∫øt n·ªëi v√† truy·ªÅn c·∫£m h·ª©ng",
      description: "X√¢y d·ª±ng k·ªπ nƒÉng truy·ªÅn th√¥ng ƒëa n·ªÅn t·∫£ng trong k·ª∑ nguy√™n s·ªë",
      gradient: "from-pink-500 to-rose-600",
      programs: [
        { name: "Quan h·ªá c√¥ng ch√∫ng", icon: "üì¢", id: "quan-he-cong-chung", trend: "üéØ C·∫ßn thi·∫øt" },
        { name: "Truy·ªÅn th√¥ng ƒëa ph∆∞∆°ng ti·ªán", icon: "üì∫", id: "truyen-thong-da-phuong-tien", trend: "üé¨ S√°ng t·∫°o" },
      ]
    },
    {
      title: "Lu·∫≠t",
      subtitle: "B·∫£o v·ªá c√¥ng l√Ω t∆∞∆°ng lai",
      description: "ƒê√†o t·∫°o chuy√™n gia ph√°p l√Ω cho n·ªÅn kinh t·∫ø s·ªë",
      gradient: "from-indigo-500 to-blue-600",
      programs: [
        { name: "Lu·∫≠t kinh t·∫ø", icon: "‚öñÔ∏è", id: "luat-kinh-te", trend: "üèõÔ∏è Uy t√≠n" },
        { name: "Lu·∫≠t th∆∞∆°ng m·∫°i qu·ªëc t·∫ø", icon: "üåê", id: "luat-thuong-mai-quoc-te", trend: "üåç Qu·ªëc t·∫ø" },
      ]
    },
    {
      title: "Ng√¥n ng·ªØ Anh",
      subtitle: "C·∫ßu n·ªëi to√†n c·∫ßu",
      description: "Th√†nh th·∫°o ng√¥n ng·ªØ qu·ªëc t·∫ø cho c∆° h·ªôi ngh·ªÅ nghi·ªáp r·ªông m·ªü",
      gradient: "from-red-500 to-orange-600",
      programs: [
        { name: "Ng√¥n ng·ªØ Anh", icon: "üá∫üá∏", id: "ngon-ngu-anh", trend: "üåü CƒÉn b·∫£n" },
      ]
    },
    {
      title: "Ng√¥n ng·ªØ Nh·∫≠t",
      subtitle: "Kh√°m ph√° x·ª© s·ªü hoa anh ƒë√†o",
      description: "N·∫Øm b·∫Øt c∆° h·ªôi vi·ªác l√†m t·∫°i th·ªã tr∆∞·ªùng Nh·∫≠t B·∫£n",
      gradient: "from-purple-500 to-pink-600",
      programs: [
        { name: "Song ng·ªØ Nh·∫≠t - Anh", icon: "üáØüáµ", id: "song-ngu-nhat-anh", trend: "üå∏ C∆° h·ªôi" },
      ]
    },
    {
      title: "Ng√¥n ng·ªØ Trung Qu·ªëc",
      subtitle: "K·∫øt n·ªëi th·ªã tr∆∞·ªùng t·ª∑ d√¢n",
      description: "T·∫≠n d·ª•ng ti·ªÅm nƒÉng th∆∞∆°ng m·∫°i v·ªõi Trung Qu·ªëc",
      gradient: "from-yellow-500 to-red-600",
      programs: [
        { name: "Song ng·ªØ Trung - Anh", icon: "üá®üá≥", id: "song-ngu-trung-anh", trend: "üêâ Ti·ªÅm nƒÉng" },
      ]
    },
    {
      title: "Ng√¥n ng·ªØ H√†n Qu·ªëc",
      subtitle: "L√†n s√≥ng Hallyu",
      description: "Tham gia xu h∆∞·ªõng vƒÉn h√≥a v√† kinh t·∫ø H√†n Qu·ªëc",
      gradient: "from-blue-500 to-purple-600",
      programs: [
        { name: "Song ng·ªØ H√†n - Anh", icon: "üá∞üá∑", id: "song-ngu-han-anh", trend: "üéµ Phong c√°ch" },
      ]
    }
  ];

  const handleProgramClick: (programId: string) => void = (programId) => {
    navigate.push(`/programs/${programId}`);
  };

  const handleCategoryClick: (categoryIndex: number) => void = (categoryIndex) => {
    setSelectedCategory(selectedCategory === categoryIndex ? null : categoryIndex);
  };

  const handleBookingSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setShowBookingModal(false);
    setShowSuccessModal(true);
    // Here you would add API call to submit bookingData
    console.log('Booking submitted:', bookingData);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-orange-50 via-white to-blue-50">
      {/* Hero Section */}
      <div className="relative overflow-hidden bg-gradient-to-r from-orange-600 via-orange-500 to-blue-600 text-white">
        <div className="absolute inset-0 bg-black opacity-10"></div>
        <div className="relative max-w-7xl mx-auto px-6 py-16">
          <div className="text-center">
            <h1 className="text-5xl font-bold mb-4 bg-gradient-to-r from-white to-orange-100 bg-clip-text text-transparent">
              ƒê·ªãnh h∆∞·ªõng t∆∞∆°ng lai c√πng FPT
            </h1>
            <p className="text-xl mb-8 max-w-3xl mx-auto opacity-90">
              Kh√°m ph√° h√†nh tr√¨nh h·ªçc t·∫≠p v√† ngh·ªÅ nghi·ªáp c·ªßa b·∫°n v·ªõi c√°c ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o ti√™n ti·∫øn, 
              ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ th√†nh c√¥ng trong k·ª∑ nguy√™n s·ªë
            </p>
            <div className="flex items-center justify-center space-x-8 text-sm">
              <div className="flex items-center">
                <span className="w-3 h-3 bg-yellow-400 rounded-full mr-2"></span>
                <span>30+ Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o</span>
              </div>
              <div className="flex items-center">
                <span className="w-3 h-3 bg-green-400 rounded-full mr-2"></span>
                <span>98% Sinh vi√™n c√≥ vi·ªác l√†m</span>
              </div>
              <div className="flex items-center">
                <span className="w-3 h-3 bg-blue-400 rounded-full mr-2"></span>
                <span>H·ª£p t√°c 500+ Doanh nghi·ªáp</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Programs Section */}
      <div className="max-w-7xl mx-auto p-6 py-12">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-gray-800 mb-4">
            Ch·ªçn lƒ©nh v·ª±c ph√π h·ª£p v·ªõi ƒëam m√™
          </h2>
          <p className="text-gray-600 max-w-2xl mx-auto">
            M·ªói lƒ©nh v·ª±c ƒë·ªÅu m·ªü ra nh·ªØng c∆° h·ªôi ngh·ªÅ nghi·ªáp tuy·ªát v·ªùi. 
            H√£y kh√°m ph√° v√† t√¨m ra con ƒë∆∞·ªùng ph√π h·ª£p nh·∫•t v·ªõi b·∫°n.
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
          {programCategories.map((category, categoryIndex) => (
            <Card 
              key={categoryIndex} 
              className={`group cursor-pointer transition-all duration-300 hover:shadow-2xl hover:scale-105 border-0 overflow-hidden ${
                selectedCategory === categoryIndex ? 'ring-4 ring-orange-300' : ''
              }`}
              onClick={() => handleCategoryClick(categoryIndex)}
            >
              <div className={`h-2 bg-gradient-to-r ${category.gradient}`}></div>
              
              <CardHeader className="pb-4 bg-gradient-to-br from-white to-gray-50">
                <div className="flex items-center justify-between">
                  <div>
                    <CardTitle className="text-xl font-bold text-gray-800 group-hover:text-orange-600 transition-colors">
                      {category.title}
                    </CardTitle>
                    <p className="text-sm text-orange-600 font-medium mt-1">
                      {category.subtitle}
                    </p>
                  </div>
                  <div className="text-2xl group-hover:scale-110 transition-transform">
                    {selectedCategory === categoryIndex ? 'üìñ' : 'üéØ'}
                  </div>
                </div>
                <p className="text-sm text-gray-600 mt-2">
                  {category.description}
                </p>
              </CardHeader>

              <CardContent className="pt-0">
                <div className={`space-y-2 transition-all duration-300 ${
                  selectedCategory === categoryIndex ? 'max-h-96 opacity-100' : 'max-h-32 opacity-70'
                } overflow-hidden`}>
                  {category.programs.map((program, programIndex) => (
                    <div
                      key={programIndex}
                      onClick={(e) => {
                        e.stopPropagation();
                        handleProgramClick(program.id);
                      }}
                      className={`group/program flex items-center justify-between p-3 rounded-lg transition-all duration-200 bg-gradient-to-r from-orange-50 to-orange-100 hover:from-orange-100 hover:to-orange-200 cursor-pointer border border-orange-200`}
                    >
                      <div className="flex items-center flex-1">
                        <span className="text-lg mr-3 group-hover/program:scale-110 transition-transform">
                          {program.icon}
                        </span>
                        <span className="text-sm font-medium text-gray-800 group-hover/program:text-orange-700 transition-colors">
                          {program.name}
                        </span>
                      </div>
                      <span className="text-xs bg-white px-2 py-1 rounded-full text-gray-600 font-medium shadow-sm">
                        {program.trend}
                      </span>
                    </div>
                  ))}
                </div>
                
                {selectedCategory !== categoryIndex && category.programs.length > 3 && (
                  <div className="mt-3 text-center">
                    <span className="text-xs text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                      Xem th√™m {category.programs.length - 3} ch∆∞∆°ng tr√¨nh
                    </span>
                  </div>
                )}
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Call to Action */}
        <div className="mt-16 text-center bg-gradient-to-r from-orange-600 to-blue-600 rounded-2xl p-8 text-white">
          <h3 className="text-2xl font-bold mb-4">
            B·∫Øt ƒë·∫ßu h√†nh tr√¨nh t∆∞∆°ng lai c·ªßa b·∫°n ngay h√¥m nay!
          </h3>
          <p className="mb-6 opacity-90">
            Tham gia c√πng h√†ng ng√†n sinh vi√™n FPT ƒëang x√¢y d·ª±ng s·ª± nghi·ªáp th√†nh c√¥ng
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button 
            onClick={() => setShowBookingModal(true)}
            className="bg-white text-orange-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
              T∆∞ v·∫•n mi·ªÖn ph√≠
            </button>
            <button className="border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-orange-600 transition-colors">
              ƒêƒÉng k√Ω tham quan
            </button>
          </div>
        </div>
      </div>

      {showBookingModal && (
        <BookingModal
          bookingData={bookingData}
          setBookingData={setBookingData}
          setShowBookingModal={setShowBookingModal}
          setShowSuccessModal={setShowSuccessModal}
          timeSlots={timeSlots}
          onSubmit={handleBookingSubmit}
        />
      )}

      {showSuccessModal && (
        <div className="fixed inset-0 bg-black/10 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl p-8 w-full max-w-md text-center border-2 border-orange-400">
            <div className="w-20 h-20 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M5 13l4 4L19 7" /></svg>
            </div>
            <h3 className="text-2xl font-bold text-orange-600 mb-4">ƒê·∫∑t l·ªãch th√†nh c√¥ng!</h3>
            <p className="text-gray-700 mb-6">
              Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n qua email v√† ƒëi·ªán tho·∫°i ƒë·ªÉ x√°c nh·∫≠n l·ªãch t∆∞ v·∫•n trong th·ªùi gian s·ªõm nh·∫•t.
            </p>
            <button
              onClick={() => setShowSuccessModal(false)}
              className="bg-orange-500 text-white px-8 py-3 rounded-xl font-semibold hover:shadow-lg transition-all"
            >
              ƒê√≥ng
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Programs;