"use client";

import { ArrowLeft, Shield, Users, TrendingUp, BookOpen, Award, Clock, Star, Target, CheckCircle } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { useParams, useRouter } from "next/navigation";
import { useState } from "react";
import BookingModal from '@/components/ui/BookingModal';

const ProgramDetail = () => {
  const param = useParams();
  const id = param.id;
  const navigate = useRouter();
  const [activeTab, setActiveTab] = useState("overview");
  const [showBookingModal, setShowBookingModal] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const defaultBookingData = {
    fullName: '',
    email: '',
    phone: '',
    type: 'online',
    date: '',
    time: ''
  };
  const [bookingData, setBookingData] = useState(defaultBookingData);
  const timeSlots = [
    '09:00 - 10:00',
    '10:00 - 11:00',
    '11:00 - 12:00',
    '14:00 - 15:00',
    '15:00 - 16:00',
    '16:00 - 17:00',
  ];

  const programData = {
    "an-toan-thong-tin": {
      title: "An to√†n th√¥ng tin",
      subtitle: "B·∫£o v·ªá t∆∞∆°ng lai s·ªë c·ªßa th·∫ø gi·ªõi",
      icon: "üõ°Ô∏è",
      gradient: "from-blue-600 via-purple-600 to-indigo-700",
      description: "Vi·ªát Nam ƒë∆∞·ª£c x·∫øp h·∫°ng th·ª© 7/78 qu·ªëc gia v·ªÅ Ch·ªâ s·ªë D·ªãch v·ª• To√†n c·∫ßu (GSLI 2023), kh·∫≥ng ƒë·ªãnh v·ªã th·∫ø trong lƒ©nh v·ª±c c√¥ng ngh·ªá th√¥ng tin, bao g·ªìm An to√†n th√¥ng tin. D·ª± ki·∫øn c√≥ h∆°n 50.000 ng∆∞·ªùi ƒëang l√†m vi·ªác trong lƒ©nh v·ª±c n√†y, con s·ªë n√†y v·∫´n ch∆∞a ƒë√°p ·ª©ng ƒë·ªß nhu c·∫ßu.",
      
      stats: [
        { icon: TrendingUp, label: "TƒÉng tr∆∞·ªüng vi·ªác l√†m", value: "35%/nƒÉm", color: "text-green-600" },
        { icon: Users, label: "Nhu c·∫ßu nh√¢n l·ª±c", value: "50,000+", color: "text-blue-600" },
        { icon: Award, label: "M·ª©c l∆∞∆°ng trung b√¨nh", value: "25-50 tri·ªáu", color: "text-orange-600" },
        { icon: Target, label: "T·ª∑ l·ªá c√≥ vi·ªác l√†m", value: "98%", color: "text-purple-600" }
      ],

      whyFpt: {
        title: "V√¨ sao ch·ªçn FPT University?",
        description: "Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o chuy√™n ng√†nh An to√†n th√¥ng tin t·∫°i Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ ƒë√°p ·ª©ng nhu c·∫ßu cao c·ªßa th·ªã tr∆∞·ªùng, kh·∫≥ng ƒë·ªãnh v·ªã th·∫ø d·∫´n ƒë·∫ßu trong lƒ©nh v·ª±c Cyber Security. Ch∆∞∆°ng tr√¨nh li√™n t·ª•c c·∫≠p nh·∫≠t xu h∆∞·ªõng m·ªõi v√† k·∫øt n·ªëi ch·∫∑t ch·∫Ω v·ªõi T·∫≠p ƒëo√†n FPT.",
        advantages: [
          { icon: Shield, title: "Lab b·∫£o m·∫≠t hi·ªán ƒë·∫°i", desc: "Trang b·ªã ƒë·∫ßy ƒë·ªß c√¥ng c·ª• v√† m√¥i tr∆∞·ªùng th·ª±c h√†nh chuy√™n nghi·ªáp" },
          { icon: BookOpen, title: "Ch∆∞∆°ng tr√¨nh c·∫≠p nh·∫≠t", desc: "Lu√¥n theo k·ªãp xu h∆∞·ªõng c√¥ng ngh·ªá v√† threat landscape m·ªõi nh·∫•t" },
          { icon: Users, title: "Gi·∫£ng vi√™n chuy√™n gia", desc: "ƒê·ªôi ng≈© gi·∫£ng vi√™n c√≥ kinh nghi·ªám th·ª±c t·∫ø t·ª´ FPT v√† c√°c t·∫≠p ƒëo√†n l·ªõn" },
          { icon: Award, title: "Ch·ª©ng ch·ªâ qu·ªëc t·∫ø", desc: "H·ªó tr·ª£ l·∫•y c√°c ch·ª©ng ch·ªâ nh∆∞ CISSP, CEH, CISA" }
        ]
      },

      curriculum: {
        title: "Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o",
        semesters: [
          {
            name: "NƒÉm 1-2: N·ªÅn t·∫£ng",
            subjects: ["L·∫≠p tr√¨nh C/C++", "M·∫°ng m√°y t√≠nh", "H·ªá ƒëi·ªÅu h√†nh", "C∆° s·ªü d·ªØ li·ªáu", "To√°n r·ªùi r·∫°c"]
          },
          {
            name: "NƒÉm 3: Chuy√™n s√¢u",
            subjects: ["Ethical Hacking", "Forensics", "Malware Analysis", "Cryptography", "Network Security"]
          },
          {
            name: "NƒÉm 4: Th·ª±c h√†nh",
            subjects: ["Capstone Project", "Th·ª±c t·∫≠p doanh nghi·ªáp", "Security Audit", "Incident Response"]
          }
        ]
      },

      careerOpportunities: [
        {
          title: "C∆° h·ªôi ngh·ªÅ nghi·ªáp",
          jobs: [
            { name: "Security Analyst", salary: "15-25 tri·ªáu", demand: "Cao" },
            { name: "Penetration Tester", salary: "20-35 tri·ªáu", demand: "R·∫•t cao" },
            { name: "Security Consultant", salary: "25-45 tri·ªáu", demand: "Cao" },
            { name: "CISO/Security Manager", salary: "40-80 tri·ªáu", demand: "Trung b√¨nh" },
            { name: "Malware Analyst", salary: "20-30 tri·ªáu", demand: "Cao" },
            { name: "Cloud Security Specialist", salary: "25-40 tri·ªáu", demand: "R·∫•t cao" }
          ]
        },
        {
          title: "T·ªë ch·∫•t c·∫ßn thi·∫øt",
          qualities: [
            { name: "T∆∞ duy logic", desc: "Kh·∫£ nƒÉng ph√¢n t√≠ch v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ ph·ª©c t·∫°p" },
            { name: "ƒêam m√™ c√¥ng ngh·ªá", desc: "Lu√¥n t√¨m hi·ªÉu v√† c·∫≠p nh·∫≠t ki·∫øn th·ª©c m·ªõi" },
            { name: "T√≠nh t·ª∑ m·ª∑", desc: "Ch√∫ √Ω ƒë·∫øn t·ª´ng chi ti·∫øt nh·ªè trong h·ªá th·ªëng" },
            { name: "Kh·∫£ nƒÉng h·ªçc h·ªèi", desc: "Th√≠ch nghi v·ªõi c√¥ng ngh·ªá v√† threat m·ªõi" }
          ]
        }
      ],

      companies: [
        { name: "FPT Software", logo: "üè¢", positions: "50+ v·ªã tr√≠" },
        { name: "Viettel Cyber Security", logo: "üõ°Ô∏è", positions: "30+ v·ªã tr√≠" },
        { name: "BKAV", logo: "üîí", positions: "20+ v·ªã tr√≠" },
        { name: "CyberCore", logo: "‚ö°", positions: "15+ v·ªã tr√≠" }
      ]
    }
  };

  const currentProgram = programData[id as keyof typeof programData];

  if (!currentProgram) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-red-50 to-orange-50 flex items-center justify-center">
        <Card className="p-8 text-center">
          <h1 className="text-2xl font-bold text-gray-800 mb-4">Kh√¥ng t√¨m th·∫•y th√¥ng tin ng√†nh h·ªçc</h1>
          <Button onClick={() => navigate.back()} className="bg-orange-600 hover:bg-orange-700">
            Quay l·∫°i
          </Button>
        </Card>
      </div>
    );
  }

  const tabs = [
    { id: "overview", label: "T·ªïng quan", icon: BookOpen },
    { id: "curriculum", label: "Ch∆∞∆°ng tr√¨nh", icon: Award },
    { id: "career", label: "Ngh·ªÅ nghi·ªáp", icon: TrendingUp },
    { id: "companies", label: "ƒê·ªëi t√°c", icon: Users }
  ];

  const handleBookingSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setShowBookingModal(false);
    setShowSuccessModal(true);
    setBookingData(defaultBookingData);
    // API call c√≥ th·ªÉ th√™m ·ªü ƒë√¢y
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* Hero Section */}
      <div className={`relative bg-gradient-to-r ${currentProgram.gradient} text-white overflow-hidden`}>
        <div className="absolute inset-0 bg-black opacity-20"></div>
        
        {/* Animated Background Elements */}
        <div className="absolute inset-0 overflow-hidden">
          <div className="absolute -top-10 -left-10 w-40 h-40 bg-white opacity-10 rounded-full animate-pulse"></div>
          <div className="absolute top-20 right-20 w-60 h-60 bg-white opacity-5 rounded-full animate-bounce"></div>
          <div className="absolute bottom-10 left-1/3 w-32 h-32 bg-white opacity-10 rounded-full animate-pulse"></div>
        </div>

        <div className="relative max-w-6xl mx-auto px-6 py-16">
          {/* Back Button */}
          <Button
            variant="ghost"
            onClick={() => navigate.back()}
            className="mb-8 text-white hover:text-gray-200 hover:bg-white/10 transition-all"
          >
            <ArrowLeft className="mr-2 h-4 w-4" />
            Quay v·ªÅ trang ch·ªß
          </Button>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            {/* Left Column - Content */}
            <div>
              <div className="flex items-center mb-4">
                <span className="text-6xl mr-4">{currentProgram.icon}</span>
                <div>
                  <h1 className="text-4xl font-bold mb-2">{currentProgram.title}</h1>
                  <p className="text-xl opacity-90">{currentProgram.subtitle}</p>
                </div>
              </div>
              
              <p className="text-lg opacity-90 mb-8 leading-relaxed">
                {currentProgram.description}
              </p>

              <div className="flex flex-wrap gap-4">
                <Button className="bg-white text-blue-600 hover:bg-gray-100 px-6 py-3" onClick={() => setShowBookingModal(true)}>
                  ƒêƒÉng k√Ω t∆∞ v·∫•n
                </Button>
                <Button variant="outline" className="border-white text-white hover:bg-white hover:text-blue-600 px-6 py-3">
                  T·∫£i brochure
                </Button>
              </div>
            </div>

            {/* Right Column - Stats */}
            <div className="grid grid-cols-2 gap-4">
              {currentProgram.stats.map((stat, index) => (
                <Card key={index} className="bg-white/10 backdrop-blur-lg border-white/20 text-white">
                  <CardContent className="p-6 text-center">
                    <stat.icon className="w-8 h-8 mx-auto mb-3 text-yellow-300" />
                    <div className="text-2xl font-bold mb-1">{stat.value}</div>
                    <div className="text-sm opacity-90">{stat.label}</div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="sticky top-0 z-40 bg-white/80 backdrop-blur-lg border-b">
        <div className="max-w-6xl mx-auto px-6">
          <div className="flex space-x-8 overflow-x-auto">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 py-4 px-2 border-b-2 transition-all whitespace-nowrap ${
                  activeTab === tab.id
                    ? 'border-orange-500 text-orange-600'
                    : 'border-transparent text-gray-600 hover:text-gray-900'
                }`}
              >
                <tab.icon className="w-4 h-4" />
                <span className="font-medium">{tab.label}</span>
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-6 py-12">
        {/* Overview Tab */}
        {activeTab === "overview" && (
          <div className="space-y-16">
            {/* Why Choose FPT Section */}
            <div>
              <h2 className="text-3xl font-bold text-gray-800 mb-8 text-center">
                {currentProgram.whyFpt.title}
              </h2>
              <p className="text-lg text-gray-600 text-center max-w-4xl mx-auto mb-12">
                {currentProgram.whyFpt.description}
              </p>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                {currentProgram.whyFpt.advantages.map((advantage, index) => (
                  <Card key={index} className="group hover:shadow-xl hover:-translate-y-2 transition-all duration-300 border-0 bg-gradient-to-br from-white to-gray-50 overflow-hidden">
                    <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-orange-400 to-blue-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500"></div>
                    <CardContent className="p-8">
                      <div className="flex items-start space-x-4">
                        <div className="bg-gradient-to-br from-orange-100 to-orange-200 p-4 rounded-xl group-hover:from-orange-200 group-hover:to-orange-300 transition-all duration-300 group-hover:scale-110">
                          <advantage.icon className="w-6 h-6 text-orange-600" />
                        </div>
                        <div className="flex-1">
                          <h3 className="text-xl font-semibold text-gray-800 mb-3 group-hover:text-orange-600 transition-colors">
                            {advantage.title}
                          </h3>
                          <p className="text-gray-600 leading-relaxed">{advantage.desc}</p>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>

            {/* Industry Insights */}
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-8">
              <h3 className="text-2xl font-bold text-gray-800 mb-8 text-center">Th√¥ng tin ng√†nh</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl">
                    üåç
                  </div>
                  <h4 className="font-semibold text-gray-800 mb-2">V·ªã th·∫ø to√†n c·∫ßu</h4>
                  <p className="text-sm text-gray-600">Vi·ªát Nam ƒë·ª©ng th·ª© 7/78 qu·ªëc gia v·ªÅ ch·ªâ s·ªë d·ªãch v·ª• to√†n c·∫ßu</p>
                </div>
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl">
                    üìà
                  </div>
                  <h4 className="font-semibold text-gray-800 mb-2">TƒÉng tr∆∞·ªüng m·∫°nh</h4>
                  <p className="text-sm text-gray-600">Th·ªã tr∆∞·ªùng An to√†n th√¥ng tin tƒÉng tr∆∞·ªüng 35% m·ªói nƒÉm</p>
                </div>
                <div className="text-center">
                  <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl">
                    üíº
                  </div>
                  <h4 className="font-semibold text-gray-800 mb-2">C∆° h·ªôi vi·ªác l√†m</h4>
                  <p className="text-sm text-gray-600">H√†ng ngh√¨n v·ªã tr√≠ vi·ªác l√†m m·ªõi ƒë∆∞·ª£c t·∫°o ra h·∫±ng nƒÉm</p>
                </div>
              </div>
            </div>

            {/* Learning Environment */}
            <div>
              <h3 className="text-2xl font-bold text-gray-800 mb-8 text-center">M√¥i tr∆∞·ªùng h·ªçc t·∫≠p</h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
                <div className="space-y-6">
                  <div className="flex items-start space-x-4">
                    <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0">
                      <CheckCircle className="w-4 h-4 text-green-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-gray-800 mb-1">Labs hi·ªán ƒë·∫°i</h4>
                      <p className="text-gray-600 text-sm">Trang b·ªã ƒë·∫ßy ƒë·ªß c√¥ng c·ª• pentesting v√† forensics chuy√™n nghi·ªáp</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-4">
                    <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0">
                      <CheckCircle className="w-4 h-4 text-blue-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-gray-800 mb-1">Th·ª±c t·∫≠p th·ª±c t·∫ø</h4>
                      <p className="text-gray-600 text-sm">100% sinh vi√™n ƒë∆∞·ª£c th·ª±c t·∫≠p t·∫°i c√°c c√¥ng ty c√¥ng ngh·ªá h√†ng ƒë·∫ßu</p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-4">
                    <div className="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0">
                      <CheckCircle className="w-4 h-4 text-purple-600" />
                    </div>
                    <div>
                      <h4 className="font-semibold text-gray-800 mb-1">Mentor 1-1</h4>
                      <p className="text-gray-600 text-sm">ƒê∆∞·ª£c h·ªó tr·ª£ b·ªüi c√°c chuy√™n gia c√≥ kinh nghi·ªám t·ª´ industry</p>
                    </div>
                  </div>
                </div>
                <div className="bg-gradient-to-br from-orange-100 to-blue-100 rounded-2xl p-8 text-center">
                  <div className="text-6xl mb-4">üéì</div>
                  <h4 className="text-xl font-bold text-gray-800 mb-2">H·ªçc t·∫≠p th·ª±c t·∫ø</h4>
                  <p className="text-gray-600">70% th·ªùi gian th·ª±c h√†nh tr√™n c√°c case study v√† project th·ª±c t·∫ø t·ª´ doanh nghi·ªáp</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Curriculum Tab */}
        {activeTab === "curriculum" && (
          <div className="space-y-12">
            <div className="text-center">
              <h2 className="text-3xl font-bold text-gray-800 mb-4">
                {currentProgram.curriculum.title}
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto mb-8">
                Ch∆∞∆°ng tr√¨nh ƒë∆∞·ª£c thi·∫øt k·∫ø theo chu·∫©n qu·ªëc t·∫ø, k·∫øt h·ª£p l√Ω thuy·∫øt v√† th·ª±c h√†nh
              </p>
              
              {/* Curriculum Overview Stats */}
              <div className="grid grid-cols-1 md:grid-cols-4 gap-4 max-w-4xl mx-auto">
                <div className="bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-blue-600">4</div>
                  <div className="text-sm text-gray-600">NƒÉm h·ªçc</div>
                </div>
                <div className="bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-green-600">144</div>
                  <div className="text-sm text-gray-600">T√≠n ch·ªâ</div>
                </div>
                <div className="bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-purple-600">70%</div>
                  <div className="text-sm text-gray-600">Th·ª±c h√†nh</div>
                </div>
                <div className="bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-lg text-center">
                  <div className="text-2xl font-bold text-orange-600">6</div>
                  <div className="text-sm text-gray-600">Th√°ng th·ª±c t·∫≠p</div>
                </div>
              </div>
            </div>

            {/* Curriculum Timeline */}
            <div className="relative">
              <div className="absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-400 via-purple-400 to-orange-400"></div>
              
              <div className="space-y-8">
                {currentProgram.curriculum.semesters.map((semester, index) => (
                  <div key={index} className="relative">
                    <div className="absolute left-6 w-4 h-4 bg-white border-4 border-blue-400 rounded-full shadow-lg"></div>
                    
                    <Card className="ml-16 overflow-hidden hover:shadow-xl transition-all duration-300 group">
                      <div className={`h-2 bg-gradient-to-r ${
                        index === 0 ? 'from-blue-400 to-blue-500' :
                        index === 1 ? 'from-purple-400 to-purple-500' :
                        'from-orange-400 to-orange-500'
                      }`}></div>
                      
                      <CardContent className="p-8">
                        <div className="flex items-center justify-between mb-6">
                          <h3 className="text-2xl font-bold text-gray-800 group-hover:text-blue-600 transition-colors">
                            {semester.name}
                          </h3>
                          <div className="flex items-center space-x-2 text-sm text-gray-500">
                            <Clock className="w-4 h-4" />
                            <span>{index < 2 ? '2 nƒÉm' : index === 2 ? '1 nƒÉm' : '1 nƒÉm'}</span>
                          </div>
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                          {semester.subjects.map((subject, subIndex) => (
                            <div key={subIndex} className="group/subject">
                              <div className="flex items-center space-x-3 bg-gradient-to-r from-gray-50 to-gray-100 p-4 rounded-lg hover:from-blue-50 hover:to-blue-100 transition-all duration-200 group-hover/subject:shadow-md">
                                <div className="w-8 h-8 bg-gradient-to-br from-blue-400 to-blue-500 rounded-full flex items-center justify-center flex-shrink-0">
                                  <BookOpen className="w-4 h-4 text-white" />
                                </div>
                                <span className="text-sm font-medium text-gray-700 group-hover/subject:text-blue-700 transition-colors">
                                  {subject}
                                </span>
                              </div>
                            </div>
                          ))}
                        </div>
                      </CardContent>
                    </Card>
                  </div>
                ))}
              </div>
            </div>

            {/* Skills Development */}
            <div className="bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl p-8">
              <h3 className="text-2xl font-bold text-gray-800 mb-8 text-center">K·ªπ nƒÉng ph√°t tri·ªÉn qua t·ª´ng nƒÉm</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div className="text-center">
                  <div className="w-20 h-20 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-3xl">
                    üíª
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">NƒÉm 1-2: N·ªÅn t·∫£ng</h4>
                  <p className="text-sm text-gray-600">L·∫≠p tr√¨nh, m·∫°ng, h·ªá th·ªëng c∆° b·∫£n</p>
                </div>
                <div className="text-center">
                  <div className="w-20 h-20 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-3xl">
                    üõ°Ô∏è
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">NƒÉm 3: Chuy√™n s√¢u</h4>
                  <p className="text-sm text-gray-600">Ethical hacking, forensics, cryptography</p>
                </div>
                <div className="text-center">
                  <div className="w-20 h-20 bg-gradient-to-br from-orange-400 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-3xl">
                    üöÄ
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">NƒÉm 4: Th·ª±c chi·∫øn</h4>
                  <p className="text-sm text-gray-600">Capstone project, th·ª±c t·∫≠p doanh nghi·ªáp</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Career Tab */}
        {activeTab === "career" && (
          <div className="space-y-12">
            {/* Career Path Overview */}
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-800 mb-4">Con ƒë∆∞·ªùng s·ª± nghi·ªáp</h2>
              <p className="text-gray-600 max-w-3xl mx-auto mb-8">
                An to√†n th√¥ng tin l√† m·ªôt trong nh·ªØng ng√†nh c√≥ tri·ªÉn v·ªçng cao nh·∫•t, v·ªõi nhi·ªÅu c∆° h·ªôi ph√°t tri·ªÉn v√† m·ª©c l∆∞∆°ng h·∫•p d·∫´n
              </p>
              
              {/* Salary Progression */}
              <div className="bg-gradient-to-r from-green-50 to-blue-50 rounded-2xl p-8 max-w-4xl mx-auto">
                <h3 className="text-xl font-bold text-gray-800 mb-6">L·ªô tr√¨nh l∆∞∆°ng theo kinh nghi·ªám</h3>
                <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center mx-auto mb-3 text-white font-bold">
                      0-1
                    </div>
                    <div className="text-sm text-gray-600 mb-1">Fresher</div>
                    <div className="font-bold text-gray-800">8-15 tri·ªáu</div>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-3 text-white font-bold">
                      1-3
                    </div>
                    <div className="text-sm text-gray-600 mb-1">Junior</div>
                    <div className="font-bold text-gray-800">15-25 tri·ªáu</div>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-3 text-white font-bold">
                      3-5
                    </div>
                    <div className="text-sm text-gray-600 mb-1">Senior</div>
                    <div className="font-bold text-gray-800">25-45 tri·ªáu</div>
                  </div>
                  <div className="text-center">
                    <div className="w-16 h-16 bg-gradient-to-br from-orange-400 to-red-600 rounded-full flex items-center justify-center mx-auto mb-3 text-white font-bold">
                      5+
                    </div>
                    <div className="text-sm text-gray-600 mb-1">Expert/Lead</div>
                    <div className="font-bold text-gray-800">45-100 tri·ªáu</div>
                  </div>
                </div>
              </div>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {currentProgram.careerOpportunities.map((section, index) => (
                <Card key={index} className="h-full hover:shadow-xl transition-all duration-300 group">
                  <div className={`h-2 bg-gradient-to-r ${
                    index === 0 ? 'from-orange-400 to-red-500' : 'from-blue-400 to-purple-500'
                  }`}></div>
                  
                  <CardContent className="p-8">
                    <div className="flex items-center mb-6">
                      <div className={`w-12 h-12 rounded-lg flex items-center justify-center mr-4 ${
                        index === 0 ? 'bg-orange-100 text-orange-600' : 'bg-blue-100 text-blue-600'
                      }`}>
                        {index === 0 ? <TrendingUp className="w-6 h-6" /> : <Target className="w-6 h-6" />}
                      </div>
                      <h3 className="text-2xl font-bold text-gray-800 group-hover:text-orange-600 transition-colors">
                        {section.title}
                      </h3>
                    </div>
                    
                    {section.jobs ? (
                      <div className="space-y-4">
                        {section.jobs.map((job, jobIndex) => (
                          <div key={jobIndex} className="group/job border border-gray-100 rounded-lg p-4 hover:border-orange-200 hover:bg-orange-50 transition-all duration-200">
                            <div className="flex justify-between items-start mb-2">
                              <h4 className="font-semibold text-gray-800 group-hover/job:text-orange-700 transition-colors">
                                {job.name}
                              </h4>
                              <div className={`text-xs px-3 py-1 rounded-full font-medium ${
                                job.demand === 'R·∫•t cao' ? 'bg-red-100 text-red-700 border border-red-200' :
                                job.demand === 'Cao' ? 'bg-orange-100 text-orange-700 border border-orange-200' :
                                'bg-gray-100 text-gray-700 border border-gray-200'
                              }`}>
                                {job.demand}
                              </div>
                            </div>
                            <div className="flex items-center justify-between">
                              <p className="text-sm text-gray-600">üí∞ {job.salary}</p>
                              <div className="flex items-center text-xs text-gray-500">
                                <Star className="w-3 h-3 mr-1" />
                                Hot job
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    ) : (
                      <div className="space-y-4">
                        {section.qualities?.map((quality, qualityIndex) => (
                          <div key={qualityIndex} className="group/quality border-l-4 border-blue-400 pl-6 py-3 hover:bg-blue-50 transition-colors rounded-r-lg">
                            <h4 className="font-semibold text-gray-800 mb-2 group-hover/quality:text-blue-700 transition-colors">
                              {quality.name}
                            </h4>
                            <p className="text-sm text-gray-600 leading-relaxed">{quality.desc}</p>
                          </div>
                        ))}
                      </div>
                    )}
                  </CardContent>
                </Card>
              ))}
            </div>

            {/* Career Development Path */}
            <div className="bg-gradient-to-br from-purple-50 to-blue-50 rounded-2xl p-8">
              <h3 className="text-2xl font-bold text-gray-800 mb-8 text-center">L·ªô tr√¨nh ph√°t tri·ªÉn ngh·ªÅ nghi·ªáp</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div className="text-center group">
                  <div className="w-20 h-20 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl group-hover:scale-110 transition-transform">
                    üéØ
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">Specialist Track</h4>
                  <p className="text-sm text-gray-600">Chuy√™n s√¢u v√†o m·ªôt lƒ©nh v·ª±c c·ª• th·ªÉ nh∆∞ Penetration Testing, Forensics</p>
                </div>
                <div className="text-center group">
                  <div className="w-20 h-20 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl group-hover:scale-110 transition-transform">
                    üëë
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">Management Track</h4>
                  <p className="text-sm text-gray-600">Ph√°t tri·ªÉn th√†nh Security Manager, CISO, qu·∫£n l√Ω team b·∫£o m·∫≠t</p>
                </div>
                <div className="text-center group">
                  <div className="w-20 h-20 bg-gradient-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-2xl group-hover:scale-110 transition-transform">
                    üöÄ
                  </div>
                  <h4 className="font-bold text-gray-800 mb-2">Entrepreneur Track</h4>
                  <p className="text-sm text-gray-600">Kh·ªüi nghi·ªáp v·ªõi c√¥ng ty b·∫£o m·∫≠t ri√™ng ho·∫∑c consultant ƒë·ªôc l·∫≠p</p>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Companies Tab */}
        {activeTab === "companies" && (
          <div className="space-y-8">
            <div className="text-center">
              <h2 className="text-3xl font-bold text-gray-800 mb-4">ƒê·ªëi t√°c tuy·ªÉn d·ª•ng</h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                C√°c doanh nghi·ªáp h√†ng ƒë·∫ßu ƒëang t√¨m ki·∫øm nh√¢n t√†i An to√†n th√¥ng tin
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {currentProgram.companies.map((company, index) => (
                <Card key={index} className="text-center hover:shadow-lg transition-all group">
                  <CardContent className="p-8">
                    <div className="text-4xl mb-4 group-hover:scale-110 transition-transform">
                      {company.logo}
                    </div>
                    <h3 className="font-semibold text-gray-800 mb-2">{company.name}</h3>
                    <p className="text-sm text-gray-600">{company.positions}</p>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* Call to Action */}
      <div className="bg-gradient-to-r from-orange-600 to-blue-600 text-white py-16">
        <div className="max-w-4xl mx-auto text-center px-6">
          <h2 className="text-3xl font-bold mb-4">S·∫µn s√†ng b·∫Øt ƒë·∫ßu h√†nh tr√¨nh?</h2>
          <p className="text-xl mb-8 opacity-90">
            Tham gia c√πng ch√∫ng t√¥i ƒë·ªÉ tr·ªü th√†nh chuy√™n gia An to√†n th√¥ng tin c·ªßa t∆∞∆°ng lai
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button className="bg-white text-orange-600 hover:bg-gray-100 px-8 py-3 text-lg">
              ƒêƒÉng k√Ω ngay
            </Button>
            <Button variant="outline" className="border-white text-white hover:bg-white hover:text-orange-600 px-8 py-3 text-lg" onClick={() => setShowBookingModal(true)}>
              T∆∞ v·∫•n 1-1
            </Button>
          </div>
        </div>
      </div>

      {showBookingModal && (
        <BookingModal
          bookingData={bookingData}
          setBookingData={setBookingData}
          setShowBookingModal={(show: boolean) => {
            setShowBookingModal(show);
            if (!show) setBookingData(defaultBookingData);
          }}
          setShowSuccessModal={setShowSuccessModal}
          timeSlots={timeSlots}
          onSubmit={handleBookingSubmit}
        />
      )}
      {showSuccessModal && (
        <div className="fixed inset-0 bg-black/10 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl p-8 w-full max-w-md text-center border-2 border-orange-400">
            <div className="w-20 h-20 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M5 13l4 4L19 7" /></svg>
            </div>
            <h3 className="text-2xl font-bold text-orange-600 mb-4">ƒê·∫∑t l·ªãch th√†nh c√¥ng!</h3>
            <p className="text-gray-700 mb-6">
              Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n qua email v√† ƒëi·ªán tho·∫°i ƒë·ªÉ x√°c nh·∫≠n l·ªãch t∆∞ v·∫•n trong th·ªùi gian s·ªõm nh·∫•t.
            </p>
            <button
              onClick={() => setShowSuccessModal(false)}
              className="bg-orange-500 text-white px-8 py-3 rounded-xl font-semibold hover:shadow-lg transition-all"
            >
              ƒê√≥ng
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProgramDetail;